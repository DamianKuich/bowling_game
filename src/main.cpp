
#include "glew.h"
#include "freeglut.h"
#include "glm.hpp"
#include "ext.hpp"
#include <iostream>
#include <cmath>
#include <vector>
#include "SOIL/SOIL.h"
#include "Shader_Loader.h"
#include "Render_Utils.h"
#include "Camera.h"
#include "Texture.h"
#include "Physics.h"
#include <Windows.h>
#include <conio.h>

#include <ctime>
#include <iostream>
#include <cmath>
#include <vector>



using namespace std;

// scene properties
namespace Objects {
    struct Properties {
        glm::vec3 size, pos;
    };

    const int numPins = 10;

    Properties  ball{ { 0.5, 0.5, 0.5 },{ -17, 0.5, 0 } },
        pins[numPins] = {
                { { 0.2, 0.2, 0.2 },{  15.3, 0.25, 0 } },
                { { 0.2, 0.2, 0.2 },{  15.8, 0.25, -0.25 } },
                { { 0.2, 0.2, 0.2 },{  15.8, 0.25, 0.25 } },
                { { 0.2, 0.2, 0.2 },{  16.3, 0.25, 0 } },
                { { 0.2, 0.2, 0.2 },{  16.3, 0.25, -0.5 } },
                { { 0.2, 0.2, 0.2 },{  16.3, 0.25, 0.5 } },
                { { 0.2, 0.2, 0.2 },{  16.8, 0.25, -0.25 } },
                { { 0.2, 0.2, 0.2 },{  16.8, 0.25, -0.75 } },
                { { 0.2, 0.2, 0.2 },{  16.8, 0.25, 0.25 } },
                { { 0.2, 0.2, 0.2 },{  16.8, 0.25, 0.75 } }

    };
}

Core::Shader_Loader shaderLoader;
GLuint programColor;
GLuint programTexture;

obj::Model planeModel, sphereModel, pinModel, arrowModel;
GLuint objectTexture, groundTexture, pinTexture, arrowTexture;

glm::vec3 cameraPos = glm::vec3(-25, 3, 0);
glm::vec3 cameraDir;
glm::vec3 cameraSide;
glm::vec3 arrowSide;
float cameraAngle = 0;
glm::mat4 cameraMatrix, perspectiveMatrix;

glm::vec3 lightDir = glm::normalize(glm::vec3(0.5, -1, -0.5));


// Initalization of physical scene (PhysX)
Physics pxScene(9.8 /* gravity (m/s^2) */);

// fixed timestep for stable and deterministic simulation
const double physicsStepTime = 1.f / 60.f;
double physicsTimeToProcess = 0;

// physical objects
PxMaterial* material = nullptr;
PxMaterial* ballMaterial = nullptr;
PxMaterial* planeMaterial = nullptr;
PxRigidStatic* bodyGround = nullptr;
PxRigidDynamic* bodyHandle = nullptr, 
                *pinHandle = nullptr,
                *bodyPins[Objects::numPins] = { nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr };

// renderable objects (description of a single renderable instance)
struct Renderable {
    obj::Model* model;
    glm::mat4 localTransform, physicsTransform;
    GLuint textureId;
};
Renderable rendGround, rendHandle, rendPin, rendPins[10], rendSand, rendArrow;
vector<Renderable*> renderables;


void initRenderables()
{
    // load models
    planeModel = obj::loadModelFromFile("models/all.obj");
    sphereModel = obj::loadModelFromFile("models/sphere.obj");
    pinModel = obj::loadModelFromFile("models/bowlingPin.obj");

    // load textures
    groundTexture = Core::LoadTexture("textures/lane.jpg");
    objectTexture = Core::LoadTexture("textures/ball.jpg");
    pinTexture = Core::LoadTexture("textures/pin.jpg");

    //create allay
    rendGround.model = &planeModel;
    rendGround.textureId = groundTexture;
    renderables.emplace_back(&rendGround);

    // create ball
    rendHandle.model = &sphereModel;
    rendHandle.textureId = objectTexture;
    rendHandle.localTransform = glm::scale(Objects::ball.size * 0.5f);
    renderables.emplace_back(&rendHandle);

    
    for (int i = 0; i < Objects::numPins; i++) {
        rendPins[i].model = &pinModel;
        rendPins[i].textureId = pinTexture;
        rendPins[i].localTransform = glm::scale(Objects::pins[i].size);
        renderables.emplace_back(&rendPins[i]);
    }
}

PxTransform posToPxTransform(glm::vec3 const& pos) {
    return PxTransform(pos.x, pos.y, pos.z);
}
// helper function: glm::vec3 size -> PxBoxGeometry
PxBoxGeometry sizeToPxBoxGeometry(glm::vec3 const& size) {
    auto h = size * 0.5f;
    return PxBoxGeometry(h.x/3, h.y , h.z/3);
}

ostringstream text;
ifstream in_file("..");

//vertices for convex mesh
static const PxVec3 convexVerts[] = {
PxVec3(0.104764,0.013808,.020130),
PxVec3(0.100342,0.013808,.039384),
PxVec3(0.090444,0.004091,.035714),
PxVec3(0.094207,0.004091,.018300),
PxVec3(0.092404,0.013808,.056888),
PxVec3(0.083657,0.004091,.051376),
PxVec3(0.079875,0.000511,.032947),
PxVec3(0.082831,0.000511,.016968),
PxVec3(0.074647,0.000511,.046955),
PxVec3(0.116863,0.032730,.000000),
PxVec3(0.115307,0.032730,.022390),
PxVec3(0.106136,0.013808,.000000),
PxVec3(0.110324,0.032730,.043832),
PxVec3(0.101442,0.032730,.063379),
PxVec3(0.088190,0.032730,.080083),
PxVec3(0.080464,0.013808,.071776),
PxVec3(0.073240,0.004091,.064485),
PxVec3(0.066433,0.000511,.058069),
PxVec3(0.061141,-0.00000,0.053331),
PxVec3(0.064438,-0.00000,0.044534),
PxVec3(0.067720,-0.00000,0.031450),
PxVec3(0.069811,-0.00000,0.016235),
PxVec3(0.083774,0.000511,.000000),
PxVec3(0.070519,0.000000,.000000),
PxVec3(0.095376,0.004091,.000000),
PxVec3(0.064298,0.013808,.083344),
PxVec3(0.044753,0.013808,.091519),
PxVec3(0.041108,0.004091,.081346),
PxVec3(0.058818,0.004091,.074438),
PxVec3(0.022943,0.013808,.096382),
PxVec3(0.021128,0.004091,.085454),
PxVec3(0.038177,0.000511,.071140),
PxVec3(0.054111,0.000511,.065844),
PxVec3(0.019725,0.000511,.074376),
PxVec3(0.070379,0.032730,.093158),
PxVec3(0.048936,0.032730,.102467),
PxVec3(0.025073,0.032730,.108034),
PxVec3(0.000000,0.032730,.109885),
PxVec3(0.000000,0.013808,.097992),
PxVec3(0.000000,0.004091,.086820),
PxVec3(0.000000,0.000511,.075486),
PxVec3(0.000000,-0.00000,0.063104),
PxVec3(0.018866,-0.00000,0.062253),
PxVec3(0.036429,-0.00000,0.059919),
PxVec3(0.051316,-0.00000,0.056535),
PxVec3(0.019031,-0.00000,0.016801),
PxVec3(0.037426,-0.00000,0.016428),
PxVec3(0.036767,-0.00000,0.032252),
PxVec3(0.018770,-0.00000,0.033103),
PxVec3(0.054555,-0.00000,0.016137),
PxVec3(0.053265,-0.00000,0.031435),
PxVec3(0.036173,-0.00000,0.046898),
PxVec3(0.018621,-0.00000,0.048414),
PxVec3(0.051655,-0.00000,0.045094),
PxVec3(0.000000,0.000000,.000000),
PxVec3(0.019168,0.000000,.000000),
PxVec3(0.000000,-0.00000,0.016984),
PxVec3(0.037720,0.000000,.000000),
PxVec3(0.055043,0.000000,.000000),
PxVec3(0.000000,-0.00000,0.049018),
PxVec3(0.000000,-0.00000,0.033484),
PxVec3(0.146949,0.246476,.099626),
PxVec3(0.159630,0.246476,.068815),
PxVec3(0.165327,0.297149,.071690),
PxVec3(0.152311,0.297149,.103817),
PxVec3(0.166690,0.246476,.035127),
PxVec3(0.172535,0.297149,.036588),
PxVec3(0.167949,0.349698,.072913),
PxVec3(0.154823,0.349698,.105612),
PxVec3(0.175186,0.349698,.037208),
PxVec3(0.121318,0.196823,.118502),
PxVec3(0.139492,0.196823,.093647),
PxVec3(0.127899,0.246476,.126121),
PxVec3(0.151645,0.196823,.064703),
PxVec3(0.158446,0.196823,.033033),
PxVec3(0.160564,0.196823,.000000),
PxVec3(0.168876,0.246476,.000000),
PxVec3(0.174756,0.297149,.000000),
PxVec3(0.177404,0.349698,.000000),
PxVec3(0.176023,0.404977,.000000),
PxVec3(0.173841,0.404977,.036778),
PxVec3(0.166706,0.404977,.072073),
PxVec3(0.153730,0.404977,.104404),
PxVec3(0.134936,0.349698,.133801),
PxVec3(0.134029,0.404977,.132290),
PxVec3(0.132666,0.297149,.131483),
PxVec3(0.036424,0.246476,.171326),
PxVec3(0.071068,0.246476,.162187),
PxVec3(0.073783,0.297149,.169275),
PxVec3(0.037822,0.297149,.178890),
PxVec3(0.102153,0.246476,.147084),
PxVec3(0.106018,0.297149,.153425),
PxVec3(0.075100,0.349698,.172412),
PxVec3(0.038504,0.349698,.182266),
PxVec3(0.107880,0.349698,.156199),
PxVec3(0.000000,0.196823,.163580),
PxVec3(0.034511,0.196823,.160729),
PxVec3(0.000000,0.246476,.174396),
PxVec3(0.067350,0.196823,.152219),
PxVec3(0.096843,0.196823,.138121),
PxVec3(0.107181,0.404977,.154464),
PxVec3(0.074626,0.404977,.170528),
PxVec3(0.038264,0.404977,.180300),
PxVec3(0.000000,0.349698,.185589),
PxVec3(0.000000,0.404977,.183597),
PxVec3(0.000000,0.297149,.182127),
PxVec3(0.025092,0.684400,.111794),
PxVec3(0.049003,0.684401,.105866),
PxVec3(0.042297,0.727124,.092166),
PxVec3(0.021641,0.727123,.097364),
PxVec3(0.070552,0.684401,.096050),
PxVec3(0.060985,0.727126,.083578),
PxVec3(0.036263,0.763702,.080476),
PxVec3(0.018534,0.763697,.085081),
PxVec3(0.052380,0.763707,.072902),
PxVec3(0.000000,0.635554,.129968),
PxVec3(0.028607,0.635554,.127697),
PxVec3(0.000000,0.684400,.113782),
PxVec3(0.055835,0.635554,.120924),
PxVec3(0.080305,0.635554,.109709),
PxVec3(0.100639,0.635554,.094113),
PxVec3(0.088559,0.684401,.082397),
PxVec3(0.076720,0.727126,.071661),
PxVec3(0.066079,0.763709,.062443),
PxVec3(0.057597,0.794128,.055278),
PxVec3(0.045514,0.794122,.064630),
PxVec3(0.031446,0.794111,.071447),
PxVec3(0.016054,0.794099,.075617),
PxVec3(0.000000,0.763695,.086635),
PxVec3(0.000000,0.794094,.077031),
PxVec3(0.000000,0.727122,.099111),
PxVec3(0.102104,0.684401,.065109),
PxVec3(0.111307,0.684401,.044983),
PxVec3(0.097011,0.727124,.039097),
PxVec3(0.088720,0.727126,.056604),
PxVec3(0.116549,0.684401,.022964),
PxVec3(0.101819,0.727123,.019957),
PxVec3(0.084189,0.763702,.034024),
PxVec3(0.076704,0.763707,.049284),
PxVec3(0.088619,0.763697,.017362),
PxVec3(0.115775,0.635554,.074366),
PxVec3(0.125927,0.635554,.051378),
PxVec3(0.131629,0.635554,.026229),
PxVec3(0.133411,0.635554,.000000),
PxVec3(0.118212,0.684400,.000000),
PxVec3(0.103371,0.727122,.000000),
PxVec3(0.090077,0.763695,.000000),
PxVec3(0.079520,0.794094,.000000),
PxVec3(0.078132,0.794099,.015336),
PxVec3(0.073993,0.794111,.030065),
PxVec3(0.067136,0.794122,.043581),
PxVec3(0.012941,0.936928,.064798),
PxVec3(0.025409,0.936897,.061056),
PxVec3(0.025978,0.952170,.062395),
PxVec3(0.013234,0.952197,.066164),
PxVec3(0.036927,0.936864,.055031),
PxVec3(0.037742,0.952142,.056300),
PxVec3(0.026897,0.969476,.064689),
PxVec3(0.013703,0.969495,.068539),
PxVec3(0.039074,0.969457,.058433),
PxVec3(0.000000,0.922895,.065336),
PxVec3(0.012770,0.922882,.064047),
PxVec3(0.000000,0.936943,.066083),
PxVec3(0.025077,0.922853,.060306),
PxVec3(0.036460,0.922825,.054304),
PxVec3(0.046455,0.922812,.046229),
PxVec3(0.047024,0.936850,.046893),
PxVec3(0.048037,0.952130,.048029),
PxVec3(0.049726,0.969448,.049904),
PxVec3(0.052323,0.989602,.052787),
PxVec3(0.041096,0.989606,.061752),
PxVec3(0.028280,0.989617,.068303),
PxVec3(0.014404,0.989627,.072320),
PxVec3(0.000000,0.969503,.069852),
PxVec3(0.000000,0.989631,.073685),
PxVec3(0.000000,0.952210,.067453),
PxVec3(0.055268,0.936864,.036868),
PxVec3(0.061411,0.936896,.025387),
PxVec3(0.062652,0.952170,.026039),
PxVec3(0.056422,0.952142,.037793),
PxVec3(0.065247,0.936928,.012936),
PxVec3(0.066533,0.952197,.013272),
PxVec3(0.064833,0.969476,.027093),
PxVec3(0.058395,0.969457,.039302),
PxVec3(0.068840,0.969495,.013814),
PxVec3(0.054641,0.922825,.036319),
PxVec3(0.060759,0.922853,.024997),
PxVec3(0.064590,0.922882,.012734),
PxVec3(0.065915,0.922895,.000000),
PxVec3(0.066571,0.936943,.000000),
PxVec3(0.067870,0.952210,.000000),
PxVec3(0.070220,0.969503,.000000),
PxVec3(0.074028,0.989631,.000000),
PxVec3(0.072560,0.989627,.014632),
PxVec3(0.068305,0.989617,.028690),
PxVec3(0.061484,0.989606,.041600),
PxVec3(0.148552,0.463297,.099853),
PxVec3(0.161099,0.463297,.068937),
PxVec3(0.151796,0.522781,.063995),
PxVec3(0.139906,0.522781,.092675),
PxVec3(0.168002,0.463297,.035179),
PxVec3(0.158361,0.522781,.032661),
PxVec3(0.139754,0.581007,.057919),
PxVec3(0.128683,0.581007,.083852),
PxVec3(0.145907,0.581007,.029565),
PxVec3(0.129507,0.463297,.126506),
PxVec3(0.170114,0.463297,.000000),
PxVec3(0.160376,0.522781,.000000),
PxVec3(0.147809,0.581007,.000000),
PxVec3(0.112028,0.581007,.106153),
PxVec3(0.121912,0.522781,.117372),
PxVec3(0.036971,0.463297,.172333),
PxVec3(0.072103,0.463297,.163015),
PxVec3(0.067836,0.522781,.151110),
PxVec3(0.034778,0.522781,.159695),
PxVec3(0.103562,0.463297,.147684),
PxVec3(0.097454,0.522781,.136960),
PxVec3(0.062266,0.581007,.136513),
PxVec3(0.031915,0.581007,.144208),
PxVec3(0.089492,0.581007,.123799),
PxVec3(0.000000,0.463297,.175476),
PxVec3(0.000000,0.581007,.146792),
PxVec3(0.000000,0.522781,.162585),
PxVec3(0.027425,0.062910,.120990),
PxVec3(0.053534,0.062910,.114688),
PxVec3(0.058310,0.102337,.127613),
PxVec3(0.029872,0.102337,.134669),
PxVec3(0.077009,0.062910,.104191),
PxVec3(0.083881,0.102337,.115882),
PxVec3(0.063003,0.147984,.140402),
PxVec3(0.032279,0.147984,.148204),
PxVec3(0.090617,0.147984,.127451),
PxVec3(0.000000,0.062910,.123091),
PxVec3(0.096536,0.062910,.089499),
PxVec3(0.105151,0.102337,.099498),
PxVec3(0.113568,0.147984,.109394),
PxVec3(0.000000,0.147984,.150814),
PxVec3(0.000000,0.102337,.137026),
PxVec3(0.111099,0.062910,.070791),
PxVec3(0.120890,0.062910,.048940),
PxVec3(0.131683,0.102337,.054378),
PxVec3(0.121016,0.102337,.078674),
PxVec3(0.126403,0.062910,.024994),
PxVec3(0.137690,0.102337,.027768),
PxVec3(0.142126,0.147984,.059761),
PxVec3(0.130658,0.147984,.086476),
PxVec3(0.148569,0.147984,.030513),
PxVec3(0.128131,0.062910,.000000),
PxVec3(0.139572,0.102337,.000000),
PxVec3(0.150584,0.147984,.000000),
PxVec3(0.015337,1.013109,.077549),
PxVec3(0.030124,1.013105,.073274),
PxVec3(0.031976,1.039300,.078322),
PxVec3(0.016272,1.039301,.082867),
PxVec3(0.043808,1.013101,.066285),
PxVec3(0.046541,1.039299,.070880),
PxVec3(0.033269,1.067271,.081841),
PxVec3(0.016924,1.067271,.086564),
PxVec3(0.048457,1.067271,.074094),
PxVec3(0.000000,1.013111,.078999),
PxVec3(0.055839,1.013099,.056695),
PxVec3(0.059400,1.039298,.060650),
PxVec3(0.061910,1.067271,.063425),
PxVec3(0.062274,1.096088,.063793),
PxVec3(0.048716,1.096088,.074481),
PxVec3(0.033435,1.096088,.082221),
PxVec3(0.017005,1.096088,.086928),
PxVec3(0.000000,1.067271,.088160),
PxVec3(0.000000,1.096088,.088516),
PxVec3(0.000000,1.039302,.084406),
PxVec3(0.065713,1.013101,.044700),
PxVec3(0.073106,1.013105,.030837),
PxVec3(0.078027,1.039300,.033005),
PxVec3(0.070021,1.039299,.047833),
PxVec3(0.077745,1.013109,.015730),
PxVec3(0.083080,1.039301,.016838),
PxVec3(0.081545,1.067271,.034533),
PxVec3(0.073080,1.067271,.050037),
PxVec3(0.086911,1.067271,.017619),
PxVec3(0.079352,1.013111,.000000),
PxVec3(0.084839,1.039302,.000000),
PxVec3(0.088787,1.067271,.000000),
PxVec3(0.089492,1.096088,.000000),
PxVec3(0.087584,1.096088,.017737),
PxVec3(0.082135,1.096088,.034758),
PxVec3(0.073561,1.096088,.050349),
PxVec3(0.016345,1.124691,.082735),
PxVec3(0.032129,1.124654,.078325),
PxVec3(0.029891,1.151199,.070894),
PxVec3(0.015232,1.151494,.074699),
PxVec3(0.046792,1.124578,.071052),
PxVec3(0.043400,1.150592,.064646),
PxVec3(0.027521,1.173891,.061087),
PxVec3(0.014075,1.174796,.064014),
PxVec3(0.039671,1.171964,.056462),
PxVec3(0.000000,1.124697,.084220),
PxVec3(0.059772,1.124533,.060951),
PxVec3(0.055179,1.150231,.055795),
PxVec3(0.049705,1.170644,.049703),
PxVec3(0.045223,1.182993,.044758),
PxVec3(0.037286,1.187543,.047169),
PxVec3(0.025983,1.191312,.049854),
PxVec3(0.013302,1.192947,.051848),
PxVec3(0.000000,1.174949,.065057),
PxVec3(0.000000,1.193236,.052621),
PxVec3(0.000000,1.151543,.075995),
PxVec3(0.070540,1.124578,.048160),
PxVec3(0.078703,1.124654,.033271),
PxVec3(0.071854,1.151199,.030662),
PxVec3(0.064723,1.150592,.044276),
PxVec3(0.083891,1.124691,.016984),
PxVec3(0.076419,1.151494,.015673),
PxVec3(0.062570,1.173891,.027812),
PxVec3(0.057124,1.171964,.039947),
PxVec3(0.066193,1.174796,.014250),
PxVec3(0.085711,1.124697,.000000),
PxVec3(0.078038,1.151543,.000000),
PxVec3(0.067527,1.174949,.000000),
PxVec3(0.055232,1.193236,.000000),
PxVec3(0.054212,1.192947,.013178),
PxVec3(0.051619,1.191312,.025736),
PxVec3(0.048203,1.187543,.036919),
PxVec3(0.014039,1.214302,.013176),
PxVec3(0.013578,1.211447,.026264),
PxVec3(0.026875,1.208829,.025608),
PxVec3(0.027881,1.211447,.012899),
PxVec3(0.013213,1.204834,.039180),
PxVec3(0.025961,1.202616,.037957),
PxVec3(0.039626,1.202616,.025174),
PxVec3(0.041335,1.204834,.012792),
PxVec3(0.037772,1.197260,.036738),
PxVec3(0.000000,1.215560,.000000),
PxVec3(0.000000,1.214916,.013332),
PxVec3(0.014264,1.214916,.000000),
PxVec3(0.000000,1.211983,.026593),
PxVec3(0.000000,1.205257,.039713),
PxVec3(0.042063,1.205257,.000000),
PxVec3(0.028346,1.211983,.000000),
PxVec3(0.060780,0.818590,.039779),
PxVec3(0.067232,0.818568,.027421),
PxVec3(0.063363,0.838252,.025872),
PxVec3(0.057128,0.838283,.037560),
PxVec3(0.071191,0.818547,.013981),
PxVec3(0.067229,0.838220,.013186),
PxVec3(0.061500,0.854577,.025099),
PxVec3(0.055357,0.854615,.036458),
PxVec3(0.065334,0.854539,.012787),
PxVec3(0.051951,0.818600,.050514),
PxVec3(0.072536,0.818537,.000000),
PxVec3(0.068556,0.838206,.000000),
PxVec3(0.066657,0.854522,.000000),
PxVec3(0.065915,0.868910,.000000),
PxVec3(0.064590,0.868926,.012621),
PxVec3(0.060759,0.868962,.024778),
PxVec3(0.054641,0.868998,.036007),
PxVec3(0.047106,0.854633,.046390),
PxVec3(0.046455,0.869014,.045844),
PxVec3(0.048696,0.838298,.047749),
PxVec3(0.014399,0.818547,.069398),
PxVec3(0.028233,0.818568,.065494),
PxVec3(0.026374,0.838252,.062088),
PxVec3(0.013440,0.838220,.065859),
PxVec3(0.040939,0.818590,.059154),
PxVec3(0.038294,0.838283,.055997),
PxVec3(0.025458,0.854577,.060461),
PxVec3(0.012967,0.854539,.064189),
PxVec3(0.036997,0.854615,.054467),
PxVec3(0.000000,0.818537,.070729),
PxVec3(0.036460,0.868998,.053871),
PxVec3(0.025077,0.868962,.059847),
PxVec3(0.012770,0.868926,.063576),
PxVec3(0.000000,0.854522,.065472),
PxVec3(0.000000,0.868910,.064862),
PxVec3(0.000000,0.838206,.067152),
PxVec3(0.054294,0.882649,.035817),
PxVec3(0.060403,0.882626,.024641),
PxVec3(0.060284,0.896003,.024634),
PxVec3(0.054178,0.896007,.035808),
PxVec3(0.064235,0.882602,.012550),
PxVec3(0.064116,0.895999,.012546),
PxVec3(0.060403,0.909333,.024754),
PxVec3(0.054294,0.909318,.035977),
PxVec3(0.064235,0.909348,.012608),
PxVec3(0.046136,0.882659,.045619),
PxVec3(0.065563,0.882592,.000000),
PxVec3(0.065445,0.895997,.000000),
PxVec3(0.065563,0.909355,.000000),
PxVec3(0.046136,0.909311,.045815),
PxVec3(0.046030,0.896009,.045610),
PxVec3(0.012672,0.882602,.063342),
PxVec3(0.024889,0.882626,.059606),
PxVec3(0.024827,0.896003,.059607),
PxVec3(0.012640,0.895999,.063346),
PxVec3(0.036196,0.882649,.053631),
PxVec3(0.036108,0.896007,.053626),
PxVec3(0.024889,0.909333,.059842),
PxVec3(0.012672,0.909348,.063584),
PxVec3(0.036196,0.909318,.053852),
PxVec3(0.000000,0.882592,.064632),
PxVec3(0.000000,0.909355,.064875),
PxVec3(0.000000,0.895997,.064639),
PxVec3(-0.104764,0.013808,0.020130),
PxVec3(-0.094207,0.004091,0.018300),
PxVec3(-0.090444,0.004091,0.035714),
PxVec3(-0.100342,0.013808,0.039384),
PxVec3(-0.082831,0.000511,0.016968),
PxVec3(-0.079875,0.000511,0.032947),
PxVec3(-0.083657,0.004091,0.051376),
PxVec3(-0.092404,0.013808,0.056888),
PxVec3(-0.074647,0.000511,0.046955),
PxVec3(-0.116863,0.032730,0.000000),
PxVec3(-0.106136,0.013808,0.000000),
PxVec3(-0.115307,0.032730,0.022390),
PxVec3(-0.095376,0.004091,0.000000),
PxVec3(-0.083773,0.000511,0.000000),
PxVec3(-0.070519,0.000000,0.000000),
PxVec3(-0.069811,-0.00000, 0.016235),
PxVec3(-0.067720,-0.00000, 0.031450),
PxVec3(-0.064438,-0.00000, 0.044534),
PxVec3(-0.061141,-0.00000, 0.053331),
PxVec3(-0.066433,0.000511,0.058069),
PxVec3(-0.073240,0.004091,0.064485),
PxVec3(-0.080464,0.013808,0.071776),
PxVec3(-0.101442,0.032730,0.063379),
PxVec3(-0.088190,0.032730,0.080083),
PxVec3(-0.110324,0.032730,0.043832),
PxVec3(-0.064298,0.013808,0.083344),
PxVec3(-0.058818,0.004091,0.074438),
PxVec3(-0.041108,0.004091,0.081346),
PxVec3(-0.044753,0.013808,0.091519),
PxVec3(-0.054111,0.000511,0.065844),
PxVec3(-0.038177,0.000511,0.071140),
PxVec3(-0.021128,0.004091,0.085454),
PxVec3(-0.022943,0.013808,0.096382),
PxVec3(-0.019725,0.000511,0.074376),
PxVec3(-0.070379,0.032730,0.093158),
PxVec3(-0.051316,-0.00000, 0.056535),
PxVec3(-0.036429,-0.00000, 0.059919),
PxVec3(-0.018866,-0.00000, 0.062253),
PxVec3(-0.025073,0.032730,0.108034),
PxVec3(-0.048936,0.032730,0.102467),
PxVec3(-0.019031,-0.00000, 0.016801),
PxVec3(-0.018770,-0.00000, 0.033103),
PxVec3(-0.036767,-0.00000, 0.032252),
PxVec3(-0.037426,-0.00000, 0.016428),
PxVec3(-0.018621,-0.00000, 0.048414),
PxVec3(-0.036173,-0.00000, 0.046898),
PxVec3(-0.053265,-0.00000, 0.031435),
PxVec3(-0.054555,-0.00000, 0.016137),
PxVec3(-0.051655,-0.00000, 0.045094),
PxVec3(-0.019168,0.000000,0.000000),
PxVec3(-0.055043,0.000000,0.000000),
PxVec3(-0.037720,0.000000,0.000000),
PxVec3(-0.146949,0.246476,0.099626),
PxVec3(-0.152311,0.297149,0.103817),
PxVec3(-0.165328,0.297149,0.071690),
PxVec3(-0.159630,0.246476,0.068815),
PxVec3(-0.154823,0.349698,0.105612),
PxVec3(-0.167949,0.349698,0.072913),
PxVec3(-0.172535,0.297149,0.036588),
PxVec3(-0.166690,0.246476,0.035127),
PxVec3(-0.175186,0.349698,0.037208),
PxVec3(-0.121318,0.196823,0.118502),
PxVec3(-0.127899,0.246476,0.126121),
PxVec3(-0.139492,0.196823,0.093647),
PxVec3(-0.132666,0.297149,0.131483),
PxVec3(-0.134936,0.349698,0.133801),
PxVec3(-0.134029,0.404977,0.132290),
PxVec3(-0.153730,0.404977,0.104404),
PxVec3(-0.166706,0.404977,0.072073),
PxVec3(-0.173841,0.404977,0.036778),
PxVec3(-0.176023,0.404977,0.000000),
PxVec3(-0.177404,0.349698,0.000000),
PxVec3(-0.174756,0.297149,0.000000),
PxVec3(-0.168876,0.246476,0.000000),
PxVec3(-0.158446,0.196823,0.033033),
PxVec3(-0.160564,0.196823,0.000000),
PxVec3(-0.151645,0.196823,0.064703),
PxVec3(-0.036424,0.246476,0.171326),
PxVec3(-0.037822,0.297149,0.178890),
PxVec3(-0.073783,0.297149,0.169275),
PxVec3(-0.071068,0.246476,0.162187),
PxVec3(-0.038504,0.349698,0.182266),
PxVec3(-0.075100,0.349698,0.172412),
PxVec3(-0.106018,0.297149,0.153425),
PxVec3(-0.102153,0.246476,0.147084),
PxVec3(-0.107880,0.349698,0.156199),
PxVec3(-0.034511,0.196823,0.160729),
PxVec3(-0.038264,0.404977,0.180300),
PxVec3(-0.074626,0.404977,0.170528),
PxVec3(-0.107181,0.404977,0.154464),
PxVec3(-0.096843,0.196823,0.138121),
PxVec3(-0.067350,0.196823,0.152219),
PxVec3(-0.025092,0.684400,0.111794),
PxVec3(-0.021641,0.727123,0.097364),
PxVec3(-0.042297,0.727124,0.092166),
PxVec3(-0.049003,0.684401,0.105866),
PxVec3(-0.018534,0.763697,0.085081),
PxVec3(-0.036263,0.763702,0.080476),
PxVec3(-0.060985,0.727126,0.083578),
PxVec3(-0.070552,0.684401,0.096050),
PxVec3(-0.052380,0.763707,0.072902),
PxVec3(-0.028607,0.635554,0.127697),
PxVec3(-0.016054,0.794099,0.075617),
PxVec3(-0.031446,0.794111,0.071447),
PxVec3(-0.045514,0.794122,0.064630),
PxVec3(-0.057597,0.794128,0.055278),
PxVec3(-0.066079,0.763709,0.062443),
PxVec3(-0.076720,0.727126,0.071661),
PxVec3(-0.088559,0.684401,0.082397),
PxVec3(-0.080305,0.635554,0.109709),
PxVec3(-0.100639,0.635554,0.094113),
PxVec3(-0.055835,0.635554,0.120924),
PxVec3(-0.102104,0.684401,0.065109),
PxVec3(-0.088720,0.727126,0.056604),
PxVec3(-0.097011,0.727124,0.039097),
PxVec3(-0.111307,0.684401,0.044983),
PxVec3(-0.076704,0.763707,0.049284),
PxVec3(-0.084189,0.763702,0.034024),
PxVec3(-0.101819,0.727123,0.019957),
PxVec3(-0.116549,0.684401,0.022964),
PxVec3(-0.088619,0.763697,0.017362),
PxVec3(-0.115775,0.635554,0.074366),
PxVec3(-0.067136,0.794122,0.043581),
PxVec3(-0.073993,0.794111,0.030065),
PxVec3(-0.078132,0.794099,0.015336),
PxVec3(-0.079520,0.794094,0.000000),
PxVec3(-0.090077,0.763695,0.000000),
PxVec3(-0.103371,0.727122,0.000000),
PxVec3(-0.118212,0.684400,0.000000),
PxVec3(-0.131629,0.635554,0.026229),
PxVec3(-0.133411,0.635554,0.000000),
PxVec3(-0.125927,0.635554,0.051378),
PxVec3(-0.012941,0.936928,0.064798),
PxVec3(-0.013234,0.952197,0.066164),
PxVec3(-0.025978,0.952170,0.062395),
PxVec3(-0.025409,0.936896,0.061056),
PxVec3(-0.013703,0.969495,0.068539),
PxVec3(-0.026897,0.969476,0.064689),
PxVec3(-0.037742,0.952142,0.056300),
PxVec3(-0.036927,0.936864,0.055031),
PxVec3(-0.039074,0.969457,0.058433),
PxVec3(-0.012770,0.922882,0.064047),
PxVec3(-0.014404,0.989627,0.072320),
PxVec3(-0.028280,0.989616,0.068303),
PxVec3(-0.041096,0.989606,0.061752),
PxVec3(-0.052323,0.989602,0.052787),
PxVec3(-0.049726,0.969448,0.049904),
PxVec3(-0.048037,0.952130,0.048029),
PxVec3(-0.047024,0.936850,0.046893),
PxVec3(-0.036460,0.922825,0.054304),
PxVec3(-0.046455,0.922812,0.046229),
PxVec3(-0.025077,0.922854,0.060306),
PxVec3(-0.055268,0.936864,0.036868),
PxVec3(-0.056422,0.952142,0.037793),
PxVec3(-0.062652,0.952170,0.026039),
PxVec3(-0.061411,0.936896,0.025387),
PxVec3(-0.058395,0.969457,0.039302),
PxVec3(-0.064833,0.969476,0.027093),
PxVec3(-0.066533,0.952197,0.013272),
PxVec3(-0.065247,0.936928,0.012936),
PxVec3(-0.068840,0.969495,0.013814),
PxVec3(-0.054641,0.922825,0.036319),
PxVec3(-0.061484,0.989606,0.041600),
PxVec3(-0.068305,0.989617,0.028690),
PxVec3(-0.072560,0.989627,0.014632),
PxVec3(-0.074028,0.989631,0.000000),
PxVec3(-0.070220,0.969503,0.000000),
PxVec3(-0.067870,0.952210,0.000000),
PxVec3(-0.066571,0.936943,0.000000),
PxVec3(-0.064590,0.922882,0.012734),
PxVec3(-0.065915,0.922895,0.000000),
PxVec3(-0.060759,0.922853,0.024997),
PxVec3(-0.148552,0.463297,0.099853),
PxVec3(-0.139906,0.522781,0.092675),
PxVec3(-0.151796,0.522781,0.063995),
PxVec3(-0.161099,0.463297,0.068937),
PxVec3(-0.128683,0.581007,0.083852),
PxVec3(-0.139754,0.581007,0.057919),
PxVec3(-0.158361,0.522781,0.032661),
PxVec3(-0.168002,0.463297,0.035179),
PxVec3(-0.145907,0.581007,0.029565),
PxVec3(-0.129507,0.463297,0.126506),
PxVec3(-0.121912,0.522781,0.117372),
PxVec3(-0.112028,0.581007,0.106153),
PxVec3(-0.147809,0.581007,0.000000),
PxVec3(-0.160376,0.522781,0.000000),
PxVec3(-0.170114,0.463297,0.000000),
PxVec3(-0.036971,0.463297,0.172333),
PxVec3(-0.034778,0.522781,0.159695),
PxVec3(-0.067836,0.522781,0.151110),
PxVec3(-0.072103,0.463297,0.163015),
PxVec3(-0.031915,0.581007,0.144208),
PxVec3(-0.062266,0.581007,0.136513),
PxVec3(-0.097454,0.522781,0.136960),
PxVec3(-0.103562,0.463297,0.147684),
PxVec3(-0.089492,0.581007,0.123799),
PxVec3(-0.027425,0.062910,0.120990),
PxVec3(-0.029872,0.102337,0.134669),
PxVec3(-0.058310,0.102337,0.127613),
PxVec3(-0.053534,0.062910,0.114688),
PxVec3(-0.032279,0.147984,0.148204),
PxVec3(-0.063003,0.147984,0.140402),
PxVec3(-0.083881,0.102337,0.115882),
PxVec3(-0.077009,0.062910,0.104191),
PxVec3(-0.090617,0.147984,0.127451),
PxVec3(-0.113568,0.147984,0.109394),
PxVec3(-0.105151,0.102337,0.099498),
PxVec3(-0.096536,0.062910,0.089499),
PxVec3(-0.111099,0.062910,0.070791),
PxVec3(-0.121016,0.102337,0.078674),
PxVec3(-0.131683,0.102337,0.054378),
PxVec3(-0.120890,0.062910,0.048940),
PxVec3(-0.130658,0.147984,0.086476),
PxVec3(-0.142126,0.147984,0.059761),
PxVec3(-0.137690,0.102337,0.027768),
PxVec3(-0.126403,0.062910,0.024994),
PxVec3(-0.148569,0.147984,0.030513),
PxVec3(-0.150584,0.147984,0.000000),
PxVec3(-0.139572,0.102337,0.000000),
PxVec3(-0.128131,0.062910,0.000000),
PxVec3(-0.015337,1.013109,0.077549),
PxVec3(-0.016272,1.039301,0.082867),
PxVec3(-0.031976,1.039300,0.078322),
PxVec3(-0.030124,1.013105,0.073274),
PxVec3(-0.016924,1.067271,0.086564),
PxVec3(-0.033269,1.067271,0.081841),
PxVec3(-0.046541,1.039299,0.070880),
PxVec3(-0.043808,1.013101,0.066285),
PxVec3(-0.048457,1.067271,0.074094),
PxVec3(-0.017005,1.096088,0.086928),
PxVec3(-0.033435,1.096088,0.082221),
PxVec3(-0.048716,1.096088,0.074481),
PxVec3(-0.062274,1.096088,0.063793),
PxVec3(-0.061910,1.067271,0.063425),
PxVec3(-0.059400,1.039298,0.060650),
PxVec3(-0.055839,1.013099,0.056695),
PxVec3(-0.065713,1.013101,0.044700),
PxVec3(-0.070021,1.039299,0.047833),
PxVec3(-0.078027,1.039300,0.033005),
PxVec3(-0.073106,1.013105,0.030837),
PxVec3(-0.073081,1.067271,0.050037),
PxVec3(-0.081545,1.067271,0.034533),
PxVec3(-0.083080,1.039301,0.016838),
PxVec3(-0.077745,1.013109,0.015730),
PxVec3(-0.086911,1.067271,0.017619),
PxVec3(-0.073561,1.096088,0.050349),
PxVec3(-0.082135,1.096088,0.034758),
PxVec3(-0.087584,1.096088,0.017737),
PxVec3(-0.089492,1.096088,0.000000),
PxVec3(-0.088787,1.067271,0.000000),
PxVec3(-0.084839,1.039302,0.000000),
PxVec3(-0.079352,1.013111,0.000000),
PxVec3(-0.016345,1.124691,0.082735),
PxVec3(-0.015232,1.151494,0.074699),
PxVec3(-0.029891,1.151199,0.070894),
PxVec3(-0.032129,1.124654,0.078325),
PxVec3(-0.014075,1.174796,0.064014),
PxVec3(-0.027521,1.173891,0.061087),
PxVec3(-0.043400,1.150592,0.064646),
PxVec3(-0.046792,1.124578,0.071052),
PxVec3(-0.039671,1.171965,0.056462),
PxVec3(-0.013302,1.192947,0.051848),
PxVec3(-0.025983,1.191312,0.049854),
PxVec3(-0.037286,1.187543,0.047169),
PxVec3(-0.045223,1.182993,0.044758),
PxVec3(-0.049705,1.170644,0.049703),
PxVec3(-0.055179,1.150231,0.055795),
PxVec3(-0.059772,1.124533,0.060951),
PxVec3(-0.070540,1.124578,0.048160),
PxVec3(-0.064723,1.150592,0.044276),
PxVec3(-0.071854,1.151199,0.030662),
PxVec3(-0.078703,1.124654,0.033271),
PxVec3(-0.057124,1.171964,0.039947),
PxVec3(-0.062570,1.173891,0.027812),
PxVec3(-0.076419,1.151494,0.015673),
PxVec3(-0.083891,1.124691,0.016984),
PxVec3(-0.066193,1.174796,0.014250),
PxVec3(-0.048203,1.187543,0.036919),
PxVec3(-0.051619,1.191312,0.025736),
PxVec3(-0.054212,1.192947,0.013178),
PxVec3(-0.055232,1.193236,0.000000),
PxVec3(-0.067527,1.174949,0.000000),
PxVec3(-0.078038,1.151543,0.000000),
PxVec3(-0.085711,1.124697,0.000000),
PxVec3(-0.014039,1.214302,0.013176),
PxVec3(-0.027881,1.211447,0.012899),
PxVec3(-0.026875,1.208829,0.025608),
PxVec3(-0.013578,1.211447,0.026264),
PxVec3(-0.041335,1.204834,0.012792),
PxVec3(-0.039626,1.202616,0.025174),
PxVec3(-0.025961,1.202616,0.037957),
PxVec3(-0.013213,1.204834,0.039180),
PxVec3(-0.037772,1.197260,0.036738),
PxVec3(-0.014264,1.214916,0.000000),
PxVec3(-0.028346,1.211983,0.000000),
PxVec3(-0.042063,1.205257,0.000000),
PxVec3(-0.060780,0.818590,0.039779),
PxVec3(-0.057128,0.838283,0.037560),
PxVec3(-0.063363,0.838252,0.025872),
PxVec3(-0.067232,0.818569,0.027421),
PxVec3(-0.055357,0.854615,0.036458),
PxVec3(-0.061500,0.854577,0.025099),
PxVec3(-0.067229,0.838220,0.013186),
PxVec3(-0.071191,0.818547,0.013981),
PxVec3(-0.065334,0.854539,0.012787),
PxVec3(-0.051951,0.818600,0.050514),
PxVec3(-0.048696,0.838298,0.047749),
PxVec3(-0.047106,0.854633,0.046390),
PxVec3(-0.046455,0.869014,0.045844),
PxVec3(-0.054641,0.868998,0.036007),
PxVec3(-0.060759,0.868962,0.024778),
PxVec3(-0.064590,0.868926,0.012621),
PxVec3(-0.065915,0.868910,0.000000),
PxVec3(-0.066657,0.854522,0.000000),
PxVec3(-0.068556,0.838206,0.000000),
PxVec3(-0.072536,0.818537,0.000000),
PxVec3(-0.014399,0.818547,0.069398),
PxVec3(-0.013440,0.838220,0.065859),
PxVec3(-0.026374,0.838252,0.062088),
PxVec3(-0.028233,0.818569,0.065494),
PxVec3(-0.012967,0.854539,0.064189),
PxVec3(-0.025458,0.854577,0.060461),
PxVec3(-0.038294,0.838283,0.055997),
PxVec3(-0.040939,0.818590,0.059154),
PxVec3(-0.036997,0.854615,0.054467),
PxVec3(-0.012770,0.868926,0.063576),
PxVec3(-0.025077,0.868962,0.059847),
PxVec3(-0.036460,0.868998,0.053871),
PxVec3(-0.054294,0.882649,0.035817),
PxVec3(-0.054178,0.896007,0.035808),
PxVec3(-0.060284,0.896003,0.024634),
PxVec3(-0.060403,0.882626,0.024641),
PxVec3(-0.054294,0.909318,0.035977),
PxVec3(-0.060403,0.909333,0.024754),
PxVec3(-0.064116,0.895999,0.012546),
PxVec3(-0.064235,0.882602,0.012550),
PxVec3(-0.064235,0.909348,0.012608),
PxVec3(-0.046136,0.882659,0.045619),
PxVec3(-0.046030,0.896009,0.045610),
PxVec3(-0.046136,0.909311,0.045815),
PxVec3(-0.065563,0.909355,0.000000),
PxVec3(-0.065445,0.895997,0.000000),
PxVec3(-0.065563,0.882592,0.000000),
PxVec3(-0.012672,0.882602,0.063342),
PxVec3(-0.012640,0.895999,0.063346),
PxVec3(-0.024827,0.896003,0.059607),
PxVec3(-0.024889,0.882626,0.059606),
PxVec3(-0.012672,0.909348,0.063584),
PxVec3(-0.024889,0.909333,0.059842),
PxVec3(-0.036108,0.896007,0.053626),
PxVec3(-0.036196,0.882649,0.053631),
PxVec3(-0.036196,0.909318,0.053852),
PxVec3(0.104764,0.013808,0.020130),
PxVec3(0.094207,0.004091,0.018300),
PxVec3(0.090444,0.004091,0.035714),
PxVec3(0.100342,0.013808,0.039384),
PxVec3(0.082831,0.000511,0.016968),
PxVec3(0.079875,0.000511,0.032947),
PxVec3(0.083657,0.004091,0.051376),
PxVec3(0.092404,0.013808,0.056888),
PxVec3(0.074647,0.000511,0.046955),
PxVec3(0.115307,0.032730,0.022390),
PxVec3(0.069811,0.000000,0.016235),
PxVec3(0.067720,0.000000,0.031450),
PxVec3(0.064438,0.000000,0.044534),
PxVec3(0.061141,0.000000,0.053331),
PxVec3(0.066433,0.000511,0.058069),
PxVec3(0.073240,0.004091,0.064485),
PxVec3(0.080464,0.013808,0.071776),
PxVec3(0.101442,0.032730,0.063379),
PxVec3(0.088190,0.032730,0.080083),
PxVec3(0.110324,0.032730,0.043832),
PxVec3(0.064298,0.013808,0.083344),
PxVec3(0.058818,0.004091,0.074438),
PxVec3(0.041108,0.004091,0.081346),
PxVec3(0.044753,0.013808,0.091519),
PxVec3(0.054111,0.000511,0.065844),
PxVec3(0.038177,0.000511,0.071140),
PxVec3(0.021128,0.004091,0.085454),
PxVec3(0.022943,0.013808,0.096382),
PxVec3(0.019725,0.000511,0.074376),
PxVec3(0.070379,0.032730,0.093158),
PxVec3(0.051316,0.000000,0.056535),
PxVec3(0.036429,0.000000,0.059919),
PxVec3(0.018866,0.000000,0.062253),
PxVec3(0.000000,0.000000,0.063104),
PxVec3(0.000000,0.000511,0.075486),
PxVec3(0.000000,0.004091,0.086820),
PxVec3(0.000000,0.013808,0.097992),
PxVec3(0.025073,0.032730,0.108034),
PxVec3(0.000000,0.032730,0.109885),
PxVec3(0.048936,0.032730,0.102467),
PxVec3(0.019031,0.000000,0.016801),
PxVec3(0.018770,0.000000,0.033103),
PxVec3(0.036767,0.000000,0.032252),
PxVec3(0.037426,0.000000,0.016428),
PxVec3(0.018621,0.000000,0.048414),
PxVec3(0.036173,0.000000,0.046898),
PxVec3(0.053265,0.000000,0.031435),
PxVec3(0.054555,0.000000,0.016137),
PxVec3(0.051655,0.000000,0.045094),
PxVec3(0.000000,0.000000,0.016984),
PxVec3(0.000000,0.000000,0.033484),
PxVec3(0.000000,0.000000,0.049018),
PxVec3(0.146949,0.246476,0.099626),
PxVec3(0.152311,0.297149,0.103817),
PxVec3(0.165328,0.297149,0.071689),
PxVec3(0.159630,0.246476,0.068815),
PxVec3(0.154823,0.349698,0.105612),
PxVec3(0.167949,0.349698,0.072913),
PxVec3(0.172535,0.297149,0.036588),
PxVec3(0.166690,0.246476,0.035127),
PxVec3(0.175186,0.349698,0.037208),
PxVec3(0.121318,0.196823,0.118502),
PxVec3(0.127899,0.246476,0.126121),
PxVec3(0.139492,0.196823,0.093647),
PxVec3(0.132666,0.297149,0.131483),
PxVec3(0.134936,0.349698,0.133801),
PxVec3(0.134029,0.404977,0.132290),
PxVec3(0.153730,0.404977,0.104404),
PxVec3(0.166706,0.404977,0.072073),
PxVec3(0.173841,0.404977,0.036777),
PxVec3(0.158446,0.196823,0.033033),
PxVec3(0.151645,0.196823,0.064703),
PxVec3(0.036424,0.246476,0.171326),
PxVec3(0.037822,0.297149,0.178890),
PxVec3(0.073783,0.297149,0.169275),
PxVec3(0.071068,0.246476,0.162187),
PxVec3(0.038504,0.349698,0.182266),
PxVec3(0.075100,0.349698,0.172412),
PxVec3(0.106018,0.297149,0.153425),
PxVec3(0.102153,0.246476,0.147084),
PxVec3(0.107880,0.349698,0.156199),
PxVec3(0.000000,0.196823,0.163580),
PxVec3(0.000000,0.246476,0.174396),
PxVec3(0.034511,0.196823,0.160729),
PxVec3(0.000000,0.297149,0.182127),
PxVec3(0.000000,0.349698,0.185589),
PxVec3(0.000000,0.404977,0.183597),
PxVec3(0.038264,0.404977,0.180300),
PxVec3(0.074626,0.404977,0.170528),
PxVec3(0.107181,0.404977,0.154464),
PxVec3(0.096843,0.196823,0.138121),
PxVec3(0.067350,0.196823,0.152219),
PxVec3(0.025092,0.684400,0.111794),
PxVec3(0.021641,0.727123,0.097364),
PxVec3(0.042297,0.727124,0.092166),
PxVec3(0.049003,0.684401,0.105866),
PxVec3(0.018534,0.763697,0.085081),
PxVec3(0.036263,0.763702,0.080475),
PxVec3(0.060985,0.727126,0.083578),
PxVec3(0.070552,0.684401,0.096049),
PxVec3(0.052380,0.763707,0.072902),
PxVec3(0.000000,0.635554,0.129967),
PxVec3(0.000000,0.684400,0.113781),
PxVec3(0.028607,0.635554,0.127696),
PxVec3(0.000000,0.727122,0.099111),
PxVec3(0.000000,0.763695,0.086635),
PxVec3(0.000000,0.794094,0.077031),
PxVec3(0.016054,0.794099,0.075617),
PxVec3(0.031446,0.794111,0.071446),
PxVec3(0.045514,0.794122,0.064630),
PxVec3(0.057597,0.794128,0.055277),
PxVec3(0.066079,0.763709,0.062443),
PxVec3(0.076720,0.727126,0.071661),
PxVec3(0.088559,0.684401,0.082396),
PxVec3(0.080305,0.635554,0.109709),
PxVec3(0.100639,0.635554,0.094113),
PxVec3(0.055835,0.635554,0.120924),
PxVec3(0.102104,0.684401,0.065108),
PxVec3(0.088720,0.727126,0.056604),
PxVec3(0.097011,0.727124,0.039097),
PxVec3(0.111307,0.684401,0.044982),
PxVec3(0.076704,0.763707,0.049284),
PxVec3(0.084189,0.763702,0.034023),
PxVec3(0.101819,0.727123,0.019957),
PxVec3(0.116549,0.684401,0.022964),
PxVec3(0.088619,0.763697,0.017362),
PxVec3(0.115775,0.635554,0.074366),
PxVec3(0.067136,0.794122,0.043581),
PxVec3(0.073993,0.794111,0.030065),
PxVec3(0.078132,0.794099,0.015336),
PxVec3(0.131629,0.635554,0.026229),
PxVec3(0.125927,0.635554,0.051378),
PxVec3(0.012941,0.936928,0.064797),
PxVec3(0.013234,0.952197,0.066163),
PxVec3(0.025978,0.952170,0.062395),
PxVec3(0.025409,0.936896,0.061056),
PxVec3(0.013703,0.969495,0.068539),
PxVec3(0.026897,0.969476,0.064689),
PxVec3(0.037742,0.952142,0.056300),
PxVec3(0.036927,0.936864,0.055030),
PxVec3(0.039074,0.969457,0.058433),
PxVec3(0.000000,0.922895,0.065336),
PxVec3(0.000000,0.936943,0.066083),
PxVec3(0.012770,0.922882,0.064047),
PxVec3(0.000000,0.952210,0.067453),
PxVec3(0.000000,0.969503,0.069852),
PxVec3(0.000000,0.989631,0.073685),
PxVec3(0.014404,0.989627,0.072320),
PxVec3(0.028280,0.989616,0.068303),
PxVec3(0.041096,0.989606,0.061752),
PxVec3(0.052323,0.989602,0.052787),
PxVec3(0.049726,0.969448,0.049904),
PxVec3(0.048037,0.952130,0.048029),
PxVec3(0.047024,0.936850,0.046893),
PxVec3(0.036460,0.922825,0.054304),
PxVec3(0.046455,0.922812,0.046229),
PxVec3(0.025077,0.922854,0.060306),
PxVec3(0.055268,0.936864,0.036867),
PxVec3(0.056422,0.952142,0.037793),
PxVec3(0.062652,0.952170,0.026038),
PxVec3(0.061411,0.936896,0.025386),
PxVec3(0.058395,0.969457,0.039301),
PxVec3(0.064833,0.969476,0.027093),
PxVec3(0.066533,0.952197,0.013272),
PxVec3(0.065247,0.936928,0.012936),
PxVec3(0.068840,0.969495,0.013814),
PxVec3(0.054641,0.922825,0.036319),
PxVec3(0.061484,0.989606,0.041600),
PxVec3(0.068305,0.989617,0.028690),
PxVec3(0.072560,0.989627,0.014632),
PxVec3(0.064590,0.922882,0.012734),
PxVec3(0.060759,0.922853,0.024997),
PxVec3(0.148552,0.463297,0.099853),
PxVec3(0.139906,0.522781,0.092674),
PxVec3(0.151796,0.522781,0.063995),
PxVec3(0.161099,0.463297,0.068937),
PxVec3(0.128683,0.581007,0.083851),
PxVec3(0.139754,0.581007,0.057918),
PxVec3(0.158361,0.522781,0.032661),
PxVec3(0.168002,0.463297,0.035179),
PxVec3(0.145907,0.581007,0.029564),
PxVec3(0.129507,0.463297,0.126506),
PxVec3(0.121912,0.522781,0.117372),
PxVec3(0.112028,0.581007,0.106153),
PxVec3(0.036971,0.463297,0.172333),
PxVec3(0.034778,0.522781,0.159694),
PxVec3(0.067836,0.522781,0.151110),
PxVec3(0.072103,0.463297,0.163015),
PxVec3(0.031915,0.581007,0.144207),
PxVec3(0.062266,0.581007,0.136513),
PxVec3(0.097454,0.522781,0.136960),
PxVec3(0.103562,0.463297,0.147684),
PxVec3(0.089492,0.581007,0.123799),
PxVec3(0.000000,0.463297,0.175476),
PxVec3(0.000000,0.522781,0.162584),
PxVec3(0.000000,0.581007,0.146792),
PxVec3(0.027425,0.062910,0.120990),
PxVec3(0.029872,0.102337,0.134669),
PxVec3(0.058310,0.102337,0.127613),
PxVec3(0.053534,0.062910,0.114688),
PxVec3(0.032279,0.147984,0.148204),
PxVec3(0.063003,0.147984,0.140402),
PxVec3(0.083881,0.102337,0.115882),
PxVec3(0.077009,0.062910,0.104191),
PxVec3(0.090617,0.147984,0.127451),
PxVec3(0.000000,0.062910,0.123091),
PxVec3(0.000000,0.102337,0.137026),
PxVec3(0.000000,0.147984,0.150814),
PxVec3(0.113568,0.147984,0.109394),
PxVec3(0.105151,0.102337,0.099498),
PxVec3(0.096536,0.062910,0.089499),
PxVec3(0.111099,0.062910,0.070791),
PxVec3(0.121016,0.102337,0.078674),
PxVec3(0.131683,0.102337,0.054378),
PxVec3(0.120890,0.062910,0.048940),
PxVec3(0.130658,0.147984,0.086476),
PxVec3(0.142126,0.147984,0.059761),
PxVec3(0.137690,0.102337,0.027768),
PxVec3(0.126403,0.062910,0.024994),
PxVec3(0.148569,0.147984,0.030513),
PxVec3(0.015337,1.013109,0.077549),
PxVec3(0.016272,1.039301,0.082867),
PxVec3(0.031976,1.039300,0.078322),
PxVec3(0.030124,1.013105,0.073273),
PxVec3(0.016924,1.067271,0.086563),
PxVec3(0.033269,1.067271,0.081841),
PxVec3(0.046541,1.039299,0.070880),
PxVec3(0.043808,1.013101,0.066285),
PxVec3(0.048457,1.067271,0.074094),
PxVec3(0.000000,1.013111,0.078999),
PxVec3(0.000000,1.039302,0.084406),
PxVec3(0.000000,1.067271,0.088160),
PxVec3(0.000000,1.096088,0.088516),
PxVec3(0.017005,1.096088,0.086928),
PxVec3(0.033435,1.096088,0.082220),
PxVec3(0.048716,1.096088,0.074480),
PxVec3(0.062274,1.096088,0.063793),
PxVec3(0.061910,1.067271,0.063425),
PxVec3(0.059400,1.039298,0.060650),
PxVec3(0.055839,1.013099,0.056694),
PxVec3(0.065713,1.013101,0.044699),
PxVec3(0.070021,1.039299,0.047832),
PxVec3(0.078027,1.039300,0.033005),
PxVec3(0.073106,1.013105,0.030837),
PxVec3(0.073081,1.067271,0.050036),
PxVec3(0.081545,1.067271,0.034533),
PxVec3(0.083080,1.039301,0.016838),
PxVec3(0.077745,1.013109,0.015730),
PxVec3(0.086911,1.067271,0.017619),
PxVec3(0.073561,1.096088,0.050349),
PxVec3(0.082135,1.096088,0.034758),
PxVec3(0.087584,1.096088,0.017737),
PxVec3(0.016345,1.124691,0.082735),
PxVec3(0.015232,1.151494,0.074699),
PxVec3(0.029891,1.151199,0.070893),
PxVec3(0.032129,1.124654,0.078324),
PxVec3(0.014075,1.174796,0.064014),
PxVec3(0.027521,1.173891,0.061086),
PxVec3(0.043400,1.150592,0.064646),
PxVec3(0.046792,1.124578,0.071052),
PxVec3(0.039671,1.171965,0.056462),
PxVec3(0.000000,1.124697,0.084220),
PxVec3(0.000000,1.151543,0.075995),
PxVec3(0.000000,1.174949,0.065057),
PxVec3(0.000000,1.193236,0.052621),
PxVec3(0.013302,1.192947,0.051848),
PxVec3(0.025983,1.191312,0.049854),
PxVec3(0.037286,1.187543,0.047169),
PxVec3(0.045223,1.182993,0.044758),
PxVec3(0.049705,1.170644,0.049702),
PxVec3(0.055179,1.150231,0.055794),
PxVec3(0.059772,1.124533,0.060951),
PxVec3(0.070540,1.124578,0.048160),
PxVec3(0.064723,1.150592,0.044276),
PxVec3(0.071854,1.151199,0.030662),
PxVec3(0.078703,1.124654,0.033270),
PxVec3(0.057124,1.171964,0.039946),
PxVec3(0.062570,1.173891,0.027811),
PxVec3(0.076419,1.151494,0.015673),
PxVec3(0.083891,1.124691,0.016984),
PxVec3(0.066193,1.174796,0.014249),
PxVec3(0.048203,1.187543,0.036918),
PxVec3(0.051619,1.191312,0.025736),
PxVec3(0.054212,1.192947,0.013177),
PxVec3(0.014039,1.214302,0.013175),
PxVec3(0.027881,1.211447,0.012898),
PxVec3(0.026875,1.208829,0.025607),
PxVec3(0.013578,1.211447,0.026264),
PxVec3(0.041335,1.204834,0.012792),
PxVec3(0.039626,1.202616,0.025173),
PxVec3(0.025961,1.202616,0.037957),
PxVec3(0.013213,1.204834,0.039179),
PxVec3(0.037772,1.197260,0.036737),
PxVec3(0.000000,1.214916,0.013331),
PxVec3(0.000000,1.205257,0.039712),
PxVec3(0.000000,1.211983,0.026592),
PxVec3(0.060780,0.818590,0.039779),
PxVec3(0.057128,0.838283,0.037559),
PxVec3(0.063363,0.838252,0.025872),
PxVec3(0.067232,0.818569,0.027420),
PxVec3(0.055357,0.854615,0.036458),
PxVec3(0.061500,0.854577,0.025098),
PxVec3(0.067229,0.838220,0.013186),
PxVec3(0.071191,0.818547,0.013981),
PxVec3(0.065334,0.854539,0.012787),
PxVec3(0.051951,0.818600,0.050514),
PxVec3(0.048696,0.838298,0.047749),
PxVec3(0.047106,0.854633,0.046389),
PxVec3(0.046455,0.869014,0.045844),
PxVec3(0.054641,0.868998,0.036006),
PxVec3(0.060759,0.868962,0.024777),
PxVec3(0.064590,0.868926,0.012621),
PxVec3(0.014399,0.818547,0.069398),
PxVec3(0.013440,0.838220,0.065859),
PxVec3(0.026374,0.838252,0.062087),
PxVec3(0.028233,0.818569,0.065494),
PxVec3(0.012967,0.854539,0.064189),
PxVec3(0.025458,0.854577,0.060460),
PxVec3(0.038294,0.838283,0.055997),
PxVec3(0.040939,0.818590,0.059154),
PxVec3(0.036997,0.854615,0.054467),
PxVec3(0.000000,0.818537,0.070729),
PxVec3(0.000000,0.838206,0.067152),
PxVec3(0.000000,0.854522,0.065472),
PxVec3(0.000000,0.868910,0.064862),
PxVec3(0.012770,0.868926,0.063575),
PxVec3(0.025077,0.868962,0.059846),
PxVec3(0.036460,0.868998,0.053871),
PxVec3(0.054294,0.882649,0.035816),
PxVec3(0.054178,0.896007,0.035808),
PxVec3(0.060284,0.896003,0.024634),
PxVec3(0.060403,0.882626,0.024641),
PxVec3(0.054294,0.909318,0.035976),
PxVec3(0.060403,0.909333,0.024753),
PxVec3(0.064116,0.895999,0.012545),
PxVec3(0.064235,0.882602,0.012550),
PxVec3(0.064235,0.909348,0.012607),
PxVec3(0.046136,0.882659,0.045618),
PxVec3(0.046030,0.896009,0.045610),
PxVec3(0.046136,0.909311,0.045815),
PxVec3(0.012672,0.882602,0.063341),
PxVec3(0.012640,0.895999,0.063346),
PxVec3(0.024827,0.896003,0.059606),
PxVec3(0.024889,0.882626,0.059606),
PxVec3(0.012672,0.909348,0.063583),
PxVec3(0.024889,0.909333,0.059842),
PxVec3(0.036108,0.896007,0.053626),
PxVec3(0.036196,0.882649,0.053630),
PxVec3(0.036196,0.909318,0.053852),
PxVec3(0.000000,0.882592,0.064632),
PxVec3(0.000000,0.895997,0.064638),
PxVec3(0.000000,0.909355,0.064875),
PxVec3(-0.104764,0.013808,-0.020130),
PxVec3(-0.100342,0.013808,-0.039384),
PxVec3(-0.090444,0.004091,-0.035714),
PxVec3(-0.094207,0.004091,-0.018300),
PxVec3(-0.092404,0.013808,-0.056888),
PxVec3(-0.083657,0.004091,-0.051376),
PxVec3(-0.079875,0.000511,-0.032947),
PxVec3(-0.082831,0.000511,-0.016968),
PxVec3(-0.074647,0.000511,-0.046955),
PxVec3(-0.115307,0.032730,-0.022390),
PxVec3(-0.110324,0.032730,-0.043832),
PxVec3(-0.101442,0.032730,-0.063379),
PxVec3(-0.088190,0.032730,-0.080083),
PxVec3(-0.080464,0.013808,-0.071776),
PxVec3(-0.073240,0.004091,-0.064485),
PxVec3(-0.066433,0.000511,-0.058069),
PxVec3(-0.061141,0.000000,-0.053331),
PxVec3(-0.064438,0.000000,-0.044534),
PxVec3(-0.067720,0.000000,-0.031450),
PxVec3(-0.069811,0.000000,-0.016235),
PxVec3(-0.064298,0.013808,-0.083344),
PxVec3(-0.044753,0.013808,-0.091519),
PxVec3(-0.041108,0.004091,-0.081346),
PxVec3(-0.058818,0.004091,-0.074438),
PxVec3(-0.022943,0.013808,-0.096382),
PxVec3(-0.021128,0.004091,-0.085454),
PxVec3(-0.038177,0.000511,-0.071140),
PxVec3(-0.054111,0.000511,-0.065844),
PxVec3(-0.019725,0.000511,-0.074376),
PxVec3(-0.070379,0.032730,-0.093158),
PxVec3(-0.048936,0.032730,-0.102467),
PxVec3(-0.025073,0.032730,-0.108034),
PxVec3(-0.018866,0.000000,-0.062253),
PxVec3(-0.036429,0.000000,-0.059919),
PxVec3(-0.051316,0.000000,-0.056535),
PxVec3(-0.019031,0.000000,-0.016801),
PxVec3(-0.037426,0.000000,-0.016428),
PxVec3(-0.036767,0.000000,-0.032252),
PxVec3(-0.018770,0.000000,-0.033103),
PxVec3(-0.054555,0.000000,-0.016137),
PxVec3(-0.053265,0.000000,-0.031435),
PxVec3(-0.036173,0.000000,-0.046898),
PxVec3(-0.018621,0.000000,-0.048414),
PxVec3(-0.051655,0.000000,-0.045094),
PxVec3(-0.146949,0.246476,-0.099626),
PxVec3(-0.159630,0.246476,-0.068815),
PxVec3(-0.165327,0.297149,-0.071689),
PxVec3(-0.152311,0.297149,-0.103817),
PxVec3(-0.166690,0.246476,-0.035127),
PxVec3(-0.172535,0.297149,-0.036588),
PxVec3(-0.167949,0.349698,-0.072913),
PxVec3(-0.154823,0.349698,-0.105612),
PxVec3(-0.175186,0.349698,-0.037208),
PxVec3(-0.121318,0.196823,-0.118502),
PxVec3(-0.139492,0.196823,-0.093647),
PxVec3(-0.127899,0.246476,-0.126121),
PxVec3(-0.151645,0.196823,-0.064703),
PxVec3(-0.158446,0.196823,-0.033033),
PxVec3(-0.173841,0.404977,-0.036777),
PxVec3(-0.166706,0.404977,-0.072073),
PxVec3(-0.153730,0.404977,-0.104404),
PxVec3(-0.134936,0.349698,-0.133801),
PxVec3(-0.134029,0.404977,-0.132290),
PxVec3(-0.132666,0.297149,-0.131483),
PxVec3(-0.036424,0.246476,-0.171326),
PxVec3(-0.071068,0.246476,-0.162187),
PxVec3(-0.073783,0.297149,-0.169275),
PxVec3(-0.037822,0.297149,-0.178890),
PxVec3(-0.102153,0.246476,-0.147084),
PxVec3(-0.106018,0.297149,-0.153425),
PxVec3(-0.075100,0.349698,-0.172412),
PxVec3(-0.038504,0.349698,-0.182266),
PxVec3(-0.107880,0.349698,-0.156199),
PxVec3(-0.034511,0.196823,-0.160729),
PxVec3(-0.067350,0.196823,-0.152219),
PxVec3(-0.096843,0.196823,-0.138121),
PxVec3(-0.107181,0.404977,-0.154464),
PxVec3(-0.074626,0.404977,-0.170528),
PxVec3(-0.038264,0.404977,-0.180300),
PxVec3(-0.025092,0.684400,-0.111794),
PxVec3(-0.049003,0.684401,-0.105866),
PxVec3(-0.042297,0.727124,-0.092166),
PxVec3(-0.021641,0.727123,-0.097364),
PxVec3(-0.070552,0.684401,-0.096049),
PxVec3(-0.060985,0.727126,-0.083578),
PxVec3(-0.036263,0.763702,-0.080475),
PxVec3(-0.018534,0.763697,-0.085081),
PxVec3(-0.052380,0.763707,-0.072902),
PxVec3(-0.028607,0.635554,-0.127696),
PxVec3(-0.055835,0.635554,-0.120924),
PxVec3(-0.080305,0.635554,-0.109709),
PxVec3(-0.100639,0.635554,-0.094113),
PxVec3(-0.088559,0.684401,-0.082396),
PxVec3(-0.076720,0.727126,-0.071661),
PxVec3(-0.066079,0.763709,-0.062443),
PxVec3(-0.057597,0.794128,-0.055277),
PxVec3(-0.045514,0.794122,-0.064630),
PxVec3(-0.031446,0.794111,-0.071446),
PxVec3(-0.016054,0.794099,-0.075617),
PxVec3(-0.102104,0.684401,-0.065108),
PxVec3(-0.111307,0.684401,-0.044982),
PxVec3(-0.097011,0.727124,-0.039097),
PxVec3(-0.088720,0.727126,-0.056604),
PxVec3(-0.116549,0.684401,-0.022964),
PxVec3(-0.101819,0.727123,-0.019957),
PxVec3(-0.084189,0.763702,-0.034023),
PxVec3(-0.076704,0.763707,-0.049284),
PxVec3(-0.088619,0.763697,-0.017362),
PxVec3(-0.115775,0.635554,-0.074366),
PxVec3(-0.125927,0.635554,-0.051378),
PxVec3(-0.131629,0.635554,-0.026229),
PxVec3(-0.078132,0.794099,-0.015336),
PxVec3(-0.073993,0.794111,-0.030065),
PxVec3(-0.067136,0.794122,-0.043581),
PxVec3(-0.012941,0.936928,-0.064797),
PxVec3(-0.025409,0.936897,-0.061056),
PxVec3(-0.025978,0.952170,-0.062395),
PxVec3(-0.013234,0.952197,-0.066163),
PxVec3(-0.036927,0.936864,-0.055030),
PxVec3(-0.037742,0.952142,-0.056300),
PxVec3(-0.026897,0.969476,-0.064689),
PxVec3(-0.013703,0.969495,-0.068539),
PxVec3(-0.039074,0.969457,-0.058433),
PxVec3(-0.012770,0.922882,-0.064047),
PxVec3(-0.025077,0.922853,-0.060306),
PxVec3(-0.036460,0.922825,-0.054304),
PxVec3(-0.046455,0.922812,-0.046229),
PxVec3(-0.047024,0.936850,-0.046893),
PxVec3(-0.048037,0.952130,-0.048029),
PxVec3(-0.049726,0.969448,-0.049904),
PxVec3(-0.052323,0.989602,-0.052787),
PxVec3(-0.041096,0.989606,-0.061752),
PxVec3(-0.028280,0.989617,-0.068303),
PxVec3(-0.014404,0.989627,-0.072320),
PxVec3(-0.055268,0.936864,-0.036867),
PxVec3(-0.061411,0.936896,-0.025386),
PxVec3(-0.062652,0.952170,-0.026038),
PxVec3(-0.056422,0.952142,-0.037793),
PxVec3(-0.065247,0.936928,-0.012936),
PxVec3(-0.066533,0.952197,-0.013272),
PxVec3(-0.064833,0.969476,-0.027093),
PxVec3(-0.058395,0.969457,-0.039301),
PxVec3(-0.068840,0.969495,-0.013814),
PxVec3(-0.054641,0.922825,-0.036319),
PxVec3(-0.060759,0.922853,-0.024997),
PxVec3(-0.064590,0.922882,-0.012734),
PxVec3(-0.072560,0.989627,-0.014632),
PxVec3(-0.068305,0.989617,-0.028690),
PxVec3(-0.061484,0.989606,-0.041600),
PxVec3(-0.148552,0.463297,-0.099853),
PxVec3(-0.161099,0.463297,-0.068937),
PxVec3(-0.151796,0.522781,-0.063995),
PxVec3(-0.139906,0.522781,-0.092674),
PxVec3(-0.168002,0.463297,-0.035179),
PxVec3(-0.158361,0.522781,-0.032661),
PxVec3(-0.139754,0.581007,-0.057918),
PxVec3(-0.128683,0.581007,-0.083851),
PxVec3(-0.145907,0.581007,-0.029564),
PxVec3(-0.129507,0.463297,-0.126506),
PxVec3(-0.112028,0.581007,-0.106153),
PxVec3(-0.121912,0.522781,-0.117372),
PxVec3(-0.036971,0.463297,-0.172333),
PxVec3(-0.072103,0.463297,-0.163015),
PxVec3(-0.067836,0.522781,-0.151110),
PxVec3(-0.034778,0.522781,-0.159694),
PxVec3(-0.103562,0.463297,-0.147684),
PxVec3(-0.097454,0.522781,-0.136960),
PxVec3(-0.062266,0.581007,-0.136513),
PxVec3(-0.031915,0.581007,-0.144207),
PxVec3(-0.089492,0.581007,-0.123799),
PxVec3(-0.027425,0.062910,-0.120990),
PxVec3(-0.053534,0.062910,-0.114688),
PxVec3(-0.058310,0.102337,-0.127613),
PxVec3(-0.029872,0.102337,-0.134669),
PxVec3(-0.077009,0.062910,-0.104191),
PxVec3(-0.083881,0.102337,-0.115882),
PxVec3(-0.063003,0.147984,-0.140402),
PxVec3(-0.032279,0.147984,-0.148204),
PxVec3(-0.090617,0.147984,-0.127451),
PxVec3(-0.096536,0.062910,-0.089499),
PxVec3(-0.105151,0.102337,-0.099498),
PxVec3(-0.113568,0.147984,-0.109394),
PxVec3(-0.111099,0.062910,-0.070791),
PxVec3(-0.120890,0.062910,-0.048940),
PxVec3(-0.131683,0.102337,-0.054378),
PxVec3(-0.121016,0.102337,-0.078674),
PxVec3(-0.126403,0.062910,-0.024994),
PxVec3(-0.137690,0.102337,-0.027768),
PxVec3(-0.142126,0.147984,-0.059761),
PxVec3(-0.130658,0.147984,-0.086476),
PxVec3(-0.148569,0.147984,-0.030513),
PxVec3(-0.015337,1.013109,-0.077549),
PxVec3(-0.030124,1.013105,-0.073273),
PxVec3(-0.031976,1.039300,-0.078322),
PxVec3(-0.016272,1.039301,-0.082867),
PxVec3(-0.043808,1.013101,-0.066285),
PxVec3(-0.046541,1.039299,-0.070880),
PxVec3(-0.033269,1.067271,-0.081841),
PxVec3(-0.016924,1.067271,-0.086563),
PxVec3(-0.048457,1.067271,-0.074094),
PxVec3(-0.055839,1.013099,-0.056694),
PxVec3(-0.059400,1.039298,-0.060650),
PxVec3(-0.061910,1.067271,-0.063425),
PxVec3(-0.062274,1.096088,-0.063793),
PxVec3(-0.048716,1.096088,-0.074480),
PxVec3(-0.033435,1.096088,-0.082220),
PxVec3(-0.017005,1.096088,-0.086928),
PxVec3(-0.065713,1.013101,-0.044699),
PxVec3(-0.073106,1.013105,-0.030837),
PxVec3(-0.078027,1.039300,-0.033005),
PxVec3(-0.070021,1.039299,-0.047832),
PxVec3(-0.077745,1.013109,-0.015730),
PxVec3(-0.083080,1.039301,-0.016838),
PxVec3(-0.081545,1.067271,-0.034533),
PxVec3(-0.073080,1.067271,-0.050036),
PxVec3(-0.086911,1.067271,-0.017619),
PxVec3(-0.087584,1.096088,-0.017737),
PxVec3(-0.082135,1.096088,-0.034758),
PxVec3(-0.073561,1.096088,-0.050349),
PxVec3(-0.016345,1.124691,-0.082735),
PxVec3(-0.032129,1.124654,-0.078324),
PxVec3(-0.029891,1.151199,-0.070893),
PxVec3(-0.015232,1.151494,-0.074699),
PxVec3(-0.046792,1.124578,-0.071052),
PxVec3(-0.043400,1.150592,-0.064646),
PxVec3(-0.027521,1.173891,-0.061086),
PxVec3(-0.014075,1.174796,-0.064014),
PxVec3(-0.039671,1.171964,-0.056462),
PxVec3(-0.059772,1.124533,-0.060951),
PxVec3(-0.055179,1.150231,-0.055794),
PxVec3(-0.049705,1.170644,-0.049702),
PxVec3(-0.045223,1.182993,-0.044758),
PxVec3(-0.037286,1.187543,-0.047169),
PxVec3(-0.025983,1.191312,-0.049854),
PxVec3(-0.013302,1.192947,-0.051848),
PxVec3(-0.070540,1.124578,-0.048160),
PxVec3(-0.078703,1.124654,-0.033270),
PxVec3(-0.071854,1.151199,-0.030662),
PxVec3(-0.064723,1.150592,-0.044276),
PxVec3(-0.083891,1.124691,-0.016984),
PxVec3(-0.076419,1.151494,-0.015673),
PxVec3(-0.062570,1.173891,-0.027811),
PxVec3(-0.057124,1.171964,-0.039946),
PxVec3(-0.066193,1.174796,-0.014249),
PxVec3(-0.054212,1.192947,-0.013177),
PxVec3(-0.051619,1.191312,-0.025736),
PxVec3(-0.048203,1.187543,-0.036918),
PxVec3(-0.014039,1.214302,-0.013175),
PxVec3(-0.013578,1.211447,-0.026264),
PxVec3(-0.026875,1.208829,-0.025607),
PxVec3(-0.027881,1.211447,-0.012898),
PxVec3(-0.013213,1.204834,-0.039179),
PxVec3(-0.025961,1.202616,-0.037957),
PxVec3(-0.039626,1.202616,-0.025173),
PxVec3(-0.041335,1.204834,-0.012792),
PxVec3(-0.037772,1.197260,-0.036737),
PxVec3(-0.060780,0.818590,-0.039779),
PxVec3(-0.067232,0.818568,-0.027420),
PxVec3(-0.063363,0.838252,-0.025872),
PxVec3(-0.057128,0.838283,-0.037559),
PxVec3(-0.071191,0.818547,-0.013981),
PxVec3(-0.067229,0.838220,-0.013186),
PxVec3(-0.061500,0.854577,-0.025098),
PxVec3(-0.055357,0.854615,-0.036458),
PxVec3(-0.065334,0.854539,-0.012787),
PxVec3(-0.051951,0.818600,-0.050514),
PxVec3(-0.064590,0.868926,-0.012621),
PxVec3(-0.060759,0.868962,-0.024777),
PxVec3(-0.054641,0.868998,-0.036006),
PxVec3(-0.047106,0.854633,-0.046389),
PxVec3(-0.046455,0.869014,-0.045844),
PxVec3(-0.048696,0.838298,-0.047749),
PxVec3(-0.014399,0.818547,-0.069398),
PxVec3(-0.028233,0.818568,-0.065494),
PxVec3(-0.026374,0.838252,-0.062087),
PxVec3(-0.013440,0.838220,-0.065859),
PxVec3(-0.040939,0.818590,-0.059154),
PxVec3(-0.038294,0.838283,-0.055997),
PxVec3(-0.025458,0.854577,-0.060460),
PxVec3(-0.012967,0.854539,-0.064189),
PxVec3(-0.036997,0.854615,-0.054467),
PxVec3(-0.036460,0.868998,-0.053871),
PxVec3(-0.025077,0.868962,-0.059846),
PxVec3(-0.012770,0.868926,-0.063575),
PxVec3(-0.054294,0.882649,-0.035816),
PxVec3(-0.060403,0.882626,-0.024641),
PxVec3(-0.060284,0.896003,-0.024634),
PxVec3(-0.054178,0.896007,-0.035808),
PxVec3(-0.064235,0.882602,-0.012550),
PxVec3(-0.064116,0.895999,-0.012545),
PxVec3(-0.060403,0.909333,-0.024753),
PxVec3(-0.054294,0.909318,-0.035976),
PxVec3(-0.064235,0.909348,-0.012607),
PxVec3(-0.046136,0.882659,-0.045618),
PxVec3(-0.046136,0.909311,-0.045815),
PxVec3(-0.046030,0.896009,-0.045610),
PxVec3(-0.012672,0.882602,-0.063341),
PxVec3(-0.024889,0.882626,-0.059606),
PxVec3(-0.024827,0.896003,-0.059606),
PxVec3(-0.012640,0.895999,-0.063346),
PxVec3(-0.036196,0.882649,-0.053630),
PxVec3(-0.036108,0.896007,-0.053626),
PxVec3(-0.024889,0.909333,-0.059842),
PxVec3(-0.012672,0.909348,-0.063583),
PxVec3(-0.036196,0.909318,-0.053852) };



void createDynamicPin(PxRigidDynamic*& body, Renderable* rend, glm::vec3 const& pos, glm::vec3 const& size)
{
    PxConvexMeshDesc convexDesc;
    convexDesc.points.count = 1410;
    convexDesc.points.stride = sizeof(PxVec3);
    convexDesc.points.data = convexVerts;
    convexDesc.flags = PxConvexFlag::eCOMPUTE_CONVEX;
    PxDefaultMemoryOutputStream buf;
    PxConvexMeshCookingResult::Enum result;
    if (!pxScene.cooking->cookConvexMesh(convexDesc, buf, &result))
    {
        cout << "1";
    }
    PxDefaultMemoryInputData input(buf.getData(), buf.getSize());
    PxConvexMesh* convexMesh = pxScene.physics->createConvexMesh(input);
    body = pxScene.physics->createRigidDynamic(posToPxTransform(pos));
    PxShape* aConvexShape = PxRigidActorExt::createExclusiveShape(*body,
    PxConvexMeshGeometry(convexMesh), *material);
    body->attachShape(*aConvexShape);
    aConvexShape->release();
    body->userData = rend;
    pxScene.scene->addActor(*body);
}
void createDynamicSphere(PxRigidDynamic*& body, Renderable* rend, glm::vec3 const& pos, float radius)
{
    body = pxScene.physics->createRigidDynamic(posToPxTransform(pos));
    PxShape* sphereShape = pxScene.physics->createShape(PxSphereGeometry(radius), *ballMaterial);
    body->attachShape(*sphereShape);
    sphereShape->release();
    body->userData = rend;
    pxScene.scene->addActor(*body);
}
void createStaticAlley(PxRigidStatic*& body)
{
    body = pxScene.physics->createRigidStatic(PxTransformFromPlaneEquation(PxPlane(0, 1, 0, 0)));
    PxShape* arrowShape = pxScene.physics->createShape(PxPlaneGeometry(), *ballMaterial);
    body->attachShape(*arrowShape);
    arrowShape->release();
    body->userData = &rendGround;
    pxScene.scene->addActor(*body);
    
}

void initPhysicsScene()
{

    // single common material
    material = pxScene.physics->createMaterial(1.f, 3.f, 0.6f);
    ballMaterial = pxScene.physics->createMaterial(3.f, 3.f, 0.01f);
    // create allay
    createStaticAlley(bodyGround);
    //create ball
        createDynamicSphere(bodyHandle, &rendHandle, Objects::ball.pos, Objects::ball.size.x * 0.5f);
        bodyHandle->setRigidBodyFlag(PxRigidBodyFlag::eKINEMATIC, false);
        PxRigidBodyExt::setMassAndUpdateInertia(*bodyHandle, 20.f);

    // create pins
    for (int i = 0; i < Objects::numPins; i++) {
        createDynamicPin(bodyPins[i], &rendPins[i], Objects::pins[i].pos, Objects::pins[i].size);
        PxRigidBodyExt::setMassAndUpdateInertia(*bodyPins[i], 0.2f);
    }
}
void updateTransforms()
{
    // Here we retrieve the current transforms of the objects from the physical simulation.
    auto actorFlags = PxActorTypeFlag::eRIGID_DYNAMIC | PxActorTypeFlag::eRIGID_STATIC;
    PxU32 nbActors = pxScene.scene->getNbActors(actorFlags);
    if (nbActors)
    {
        vector<PxRigidActor*> actors(nbActors);
        pxScene.scene->getActors(actorFlags, (PxActor**)&actors[0], nbActors);
        for (auto actor : actors)
        {
            // We use the userData of the objects to set up the model matrices
            // of proper renderables.
            if (!actor->userData) continue;
            Renderable* renderable = (Renderable*)actor->userData;

            // get world matrix of the object (actor)
            PxMat44 transform = actor->getGlobalPose();
            auto& c0 = transform.column0;
            auto& c1 = transform.column1;
            auto& c2 = transform.column2;
            auto& c3 = transform.column3;

            // set up the model matrix used for the rendering
            renderable->physicsTransform = glm::mat4(
                c0.x, c0.y, c0.z, c0.w,
                c1.x, c1.y, c1.z, c1.w,
                c2.x, c2.y, c2.z, c2.w,
                c3.x, c3.y, c3.z, c3.w);
        }
    }
}
void moveHandle(float force) {
    if (!bodyHandle) return;
    bodyHandle->setLinearVelocity(PxVec3(force, 0, 0));
}
void moveBallLeftRight(float force)
{
    if (!bodyHandle) return;
    bodyHandle->setAngularVelocity(PxVec3(force, 0, 0));
}
//function to reset game
void reset() {
    bodyHandle->release();
    for (int i = 0; i < Objects::numPins; i++) {
        bodyPins[i]->release();
    }
    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); // Clean the screen and the depth buffer
    glLoadIdentity(); // Reset The Projection Matrix
    createDynamicSphere(bodyHandle, &rendHandle, Objects::ball.pos, Objects::ball.size.x * 0.5f);
    bodyHandle->setRigidBodyFlag(PxRigidBodyFlag::eKINEMATIC, false);
    PxRigidBodyExt::setMassAndUpdateInertia(*bodyHandle, 20.f);
    for (int i = 0; i < Objects::numPins; i++) {
        createDynamicPin(bodyPins[i], &rendPins[i], Objects::pins[i].pos, Objects::pins[i].size);
        PxRigidBodyExt::setMassAndUpdateInertia(*bodyPins[i], 0.2f);
    }
    glutSwapBuffers();
}

void keyboard(unsigned char key, int x, int y)
{
    float angleSpeed = 0.1f;
    float moveSpeed = 0.3f;
    float handleSpeed = 20.f;
    switch (key)
    {
    case 'z': cameraAngle -= angleSpeed; break;
    case 'x': cameraAngle += angleSpeed; break;
    case 'w': cameraPos += 2*(cameraDir * moveSpeed); break;
    case 's': cameraPos -= 2*(cameraDir * moveSpeed); break;
    case 'd': cameraPos += 2*(cameraSide * moveSpeed); break;
    case 'a': cameraPos -= 2*(cameraSide * moveSpeed); break;
    case 'h': moveHandle(handleSpeed);  break;
    case 'k': moveBallLeftRight(-1); break;
    case 'l': moveBallLeftRight(1); break;
    case 'r': reset(); break;
    }
}

void mouse(int x, int y)
{
}

glm::mat4 createCameraMatrix()
{
    cameraDir = glm::normalize(glm::vec3(cosf(cameraAngle - glm::radians(30.f)), 0, sinf(cameraAngle - glm::radians(0.0f))));
    glm::vec3 up = glm::vec3(0, 1, 0);
    cameraSide = glm::cross(cameraDir, up);

    return Core::createViewMatrix(cameraPos, cameraDir, up);
}

void drawObjectColor(obj::Model* model, glm::mat4 modelMatrix, glm::vec3 color)
{
    GLuint program = programColor;

    glUseProgram(program);

    glUniform3f(glGetUniformLocation(program, "objectColor"), color.x, color.y, color.z);
    glUniform3f(glGetUniformLocation(program, "lightDir"), lightDir.x, lightDir.y, lightDir.z);

    glm::mat4 transformation = perspectiveMatrix * cameraMatrix * modelMatrix;
    glUniformMatrix4fv(glGetUniformLocation(program, "modelViewProjectionMatrix"), 1, GL_FALSE, (float*)&transformation);
    glUniformMatrix4fv(glGetUniformLocation(program, "modelMatrix"), 1, GL_FALSE, (float*)&modelMatrix);
    Core::DrawModel(model);

    glUseProgram(0);
}

void drawObjectTexture(obj::Model* model, glm::mat4 modelMatrix, GLuint textureId)
{
    GLuint program = programTexture;

    glUseProgram(program);

    glUniform3f(glGetUniformLocation(program, "lightDir"), lightDir.x, lightDir.y, lightDir.z);
    Core::SetActiveTexture(textureId, "textureSampler", program, 0);

    glm::mat4 transformation = perspectiveMatrix * cameraMatrix * modelMatrix;
    glUniformMatrix4fv(glGetUniformLocation(program, "modelViewProjectionMatrix"), 1, GL_FALSE, (float*)&transformation);
    glUniformMatrix4fv(glGetUniformLocation(program, "modelMatrix"), 1, GL_FALSE, (float*)&modelMatrix);

    Core::DrawModel(model);

    glUseProgram(0);
}

void renderScene()
{
    double time = glutGet(GLUT_ELAPSED_TIME) / 1000.0;
    static double prevTime = time;
    double dtime = time - prevTime;
    prevTime = time;

    // Update physics
    if (dtime < 1.f) {
        physicsTimeToProcess += dtime;
        while (physicsTimeToProcess > 0) {
            // here we perform the physics simulation step
            pxScene.step(physicsStepTime);
            physicsTimeToProcess -= physicsStepTime;
        }
    }

    // Update of camera and perspective matrices
    cameraMatrix = createCameraMatrix();
    perspectiveMatrix = Core::createPerspectiveMatrix();

    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
    glClearColor(0.0f, 0.1f, 0.3f, 1.0f);

    // update transforms from physics simulation
    updateTransforms();

    // render models
    for (Renderable* renderable : renderables) {
        drawObjectTexture(renderable->model, renderable->physicsTransform * renderable->localTransform, renderable->textureId);
    }

    glutSwapBuffers();
}

void init()
{
    srand(time(0));
    glEnable(GL_DEPTH_TEST);
    programColor = shaderLoader.CreateProgram("shaders/shader_color.vert", "shaders/shader_color.frag");
    programTexture = shaderLoader.CreateProgram("shaders/shader_tex.vert", "shaders/shader_tex.frag");

    initRenderables();
    initPhysicsScene();
}

void shutdown()
{
    shaderLoader.DeleteProgram(programColor);
    shaderLoader.DeleteProgram(programTexture);
}

void idle()
{
    glutPostRedisplay();
}

int main(int argc, char** argv)
{
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_DEPTH | GLUT_DOUBLE | GLUT_RGBA);
    glutInitWindowPosition(200, 200);
    glutInitWindowSize(600, 600);
    glutCreateWindow("OpenGL + PhysX");
    glewInit();

    init();
    glutKeyboardFunc(keyboard);
    glutPassiveMotionFunc(mouse);
    glutDisplayFunc(renderScene);
    glutIdleFunc(idle);

    glutMainLoop();

    shutdown();

    return 0;
}
